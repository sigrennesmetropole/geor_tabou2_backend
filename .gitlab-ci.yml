# Pipeline variables
variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml -Dmaven.repo.local=.m2/repository --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  DOCKER_DISABLE: "true"
  
# Cache policy - Share target folders between jobs - Note that key is related to a commit and is purged automatically after pipeline execution
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - $CI_PROJECT_DIR/.m2/repository/**/*
    - $CI_PROJECT_DIR/**/target/**/*

include:
  - project: 'boost/template-ci/pipelines/common'
    file: 'docker/docker-template.yml'
  - project: 'bots/trivy-script'
    file: '/trivy-template-job.yml' 

default:
  image: maven:3.9.0-eclipse-temurin-17
  before_script:
    - apt update && apt install -y gettext-base
    - envsubst '${MVN_GROUP} ${MVN_RELEASE} ${MVN_SNAPSHOTS}' < pom.xml > pom.subst && mv -f pom.subst pom.xml

# Stages definition
stages:
  - build
  - test
  - pre_docker
  - docker
  - deploy

# Build job with maven plugin execution policies define in parent pom
tabou2:build:
  script:
    - sh ./mvnw $MAVEN_CLI_OPTS -U clean package
  stage: build
  except:
    refs:
      - master
      - open/master 
  artifacts:
    paths:
      - $CI_PROJECT_DIR/tabou2-facade/target/tabou2-facade-*.jar
      - $CI_PROJECT_DIR/tabou2-facade/target/tabou2.jar
      - $CI_PROJECT_DIR/tabou2-facade/target/tabou2-facade-*.war
      - $CI_PROJECT_DIR/tabou2-facade/target/tabou2.war
  interruptible: true
 
tabou2:build:master:
  script:
    - sh ./mvnw $MAVEN_CLI_OPTS -U clean package -DskipTests
  stage: build  
  only:
    refs:
      - master
      - open/master   
  artifacts:
    paths:
      - $CI_PROJECT_DIR/tabou2-facade/target/tabou2-facade-*.jar
      - $CI_PROJECT_DIR/tabou2-facade/target/tabou2.jar
      - $CI_PROJECT_DIR/tabou2-facade/target/tabou2-facade-*.war
      - $CI_PROJECT_DIR/tabou2-facade/target/tabou2.war
  interruptible: true
  
# Sonar code quality analysis - note a full test coverage report through a jacoco.exec merged file in base project folder
tabou2:sonar:
  stage: test
  image: maven:3.9.9-eclipse-temurin-17
  dependencies:
    - tabou2:build
  except:
    refs:
      - master
      - open/master
  allow_failure: true
  script:
    - >
      sh ./mvnw $MAVEN_CLI_OPTS -U compile sonar:sonar
      -Dsonar.host.url=$SONAR_URL
      -Dsonar.login=$SONAR_TOKEN
      -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA
      -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME
      -Dsonar.gitlab.project_id=$CI_PROJECT_ID
      -Dsonar.branch.name=$CI_COMMIT_REF_NAME
  interruptible: true          

# On master, do not use branch parameter
tabou2:sonar:master:
  stage: test
  image: maven:3.9.9-eclipse-temurin-17
  dependencies:
    - tabou2:build 
  only:
    refs:
      - open/master
  allow_failure: true
  script:
    - >
      sh ./mvnw $MAVEN_CLI_OPTS -U compile sonar:sonar
      -Dsonar.host.url=$SONAR_URL
      -Dsonar.login=$SONAR_TOKEN
      -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA
      -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME
      -Dsonar.gitlab.project_id=$CI_PROJECT_ID
  interruptible: true
  
# Copie des artifacts dans les r√©pertoires des images dockers
tabou2:pre_docker:
  stage: pre_docker
  only:
    refs:
      - master
      - open/master
      - open/develop
      - /^release.*/
  script:
    - ls -l $CI_PROJECT_DIR/tabou2-facade/target/
    - cp $CI_PROJECT_DIR/tabou2-facade/target/tabou2.jar $CI_PROJECT_DIR/docker/rennes-metropole
    - cp $CI_PROJECT_DIR/tabou2-facade/target/tabou2.jar $CI_PROJECT_DIR/docker/template/tabou2
  artifacts:
    paths:
      - '$CI_PROJECT_DIR/tabou2-facade/target/**.war'
      - '$CI_PROJECT_DIR/tabou2-facade/target/**.jar'
      - '$CI_PROJECT_DIR/docker/**/**.war'
      - '$CI_PROJECT_DIR/docker/**/**.jar'

tabou2:docker2:build:
  extends: ['.docker:build']
  needs:
    - tabou2:pre_docker
  dependencies:
    - tabou2:pre_docker
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /.*develop/ || $CI_COMMIT_BRANCH =~ /.*master/ || $CI_COMMIT_BRANCH =~ /^release.*/'
  timeout: 1h
  artifacts:
    paths:
      - '$CI_PROJECT_DIR/tabou2-facade/target/**.war'
      - '$CI_PROJECT_DIR/tabou2-facade/target/**.jar'
      - '$CI_PROJECT_DIR/tabou2-facade/target/*.zip'   
      - '$CI_PROJECT_DIR/docker/**/**.war'
      - '$CI_PROJECT_DIR/docker/**/**.zip'
      - '$CI_PROJECT_DIR/docker/**/**.jar' 

.tabou2:deploy:
  stage: deploy
  tags:
    - iaas
  image: glregistry.boost.open.global/boost/docker/mvn-node-jdk11-ansible:latest
  dependencies:
    - tabou2:build  
  before_script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$ansible_private_key" | base64 -d)       
  script:
    - cp -f $CI_PROJECT_DIR/tabou2-facade/target/tabou2.jar $CI_PROJECT_DIR/ansible/dockerize/files/tabou2.jar
    - cd $CI_PROJECT_DIR/ansible  
    - cp tabou2_dev_var.yml $HOME/tabou2_var.yml
    - ansible-playbook tabou2-docker.yml -v -i "${TARGET_ENV}," -u root --ssh-common-args=-oStrictHostKeyChecking=no

tabou2:deploy:
  extends: .tabou2:deploy
  only:
    refs:
      - open/develop
  variables: 
    TARGET_ENV: REN1VML0096
    
tabou2:deploy:master:
  extends: .tabou2:deploy
  only:
    refs:
      - open/master
  variables: 
    TARGET_ENV: REN1VML0095
    
trivyscan:back: 
  extends: 
    - .trivy-scan
  stage: docker
  needs:
    - tabou2:docker2:build
  dependencies:
    - tabou2:docker2:build  
  variables:
    TRIVY_DOCKER_SCAN: glregistry.boost.open.global/rennes-metropole/tabou2/tabou2/rennes-metropole:open-develop
  only:
    refs:
      - open/develop    