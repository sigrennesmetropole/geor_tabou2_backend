<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>tabou2</artifactId>
		<groupId>rm</groupId>
		<version>1.5.0</version>
		<relativePath>../</relativePath>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>tabou2-facade</artifactId>
	<packaging>jar</packaging>

	<dependencies>

		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>tabou2-service</artifactId>
			<version>${project.version}</version>
			<type>jar</type>
		</dependency>

		<!-- Server Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<!-- Swagger UI dependency -->
		<!-- OpenApi 3 doc dependency -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
		</dependency>

		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-models</artifactId>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
		</dependency>

		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
		</dependency>

		<dependency>
			<groupId>org.ocpsoft.rewrite</groupId>
			<artifactId>rewrite-servlet</artifactId>
		</dependency>

		<dependency>
			<groupId>org.ocpsoft.rewrite</groupId>
			<artifactId>rewrite-integration-spring</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>

	</dependencies>

	<build>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<configuration>
					<modelPackage>rm.tabou2.service.dto</modelPackage>
					<generatorName>spring</generatorName>
					<library>spring-boot</library>
					<generateModelTests>false</generateModelTests>
					<generateModelDocumentation>false</generateModelDocumentation>
					<generateSupportingFiles>true</generateSupportingFiles>
					<generateApiDocumentation>true</generateApiDocumentation>
					<generateApis>true</generateApis>
					<generateModels>false</generateModels>
					<templateDirectory>${project.basedir}/src/conf/generation/</templateDirectory>
					<configOptions>
						<interfaceOnly>true</interfaceOnly>
						<useSpringBoot3>true</useSpringBoot3>
						<dateLibrary>legacy</dateLibrary>
						<useSwaggerUI>true</useSwaggerUI>
						<useJakartaEe>true</useJakartaEe>
						<unhandledException>true</unhandledException>
					</configOptions>
				</configuration>
				<executions>
					<execution>
						<id>generate-api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>rm.tabou2.facade.api</apiPackage>
							<inputSpec>./resources/openapi/tabou2-api.json</inputSpec>
							<serverVariableOverrides>basePath=</serverVariableOverrides>
						</configuration>
					</execution>
					<execution>
						<id>generate-api-v1</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>rm.tabou2.facade.api.v1</apiPackage>
							<inputSpec>./resources/openapi/tabou2-api-v1.json</inputSpec>
							<serverVariableOverrides>basePath=v1</serverVariableOverrides>
						</configuration>
					</execution>
					<execution>
						<id>generate-api-v2</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<apiPackage>rm.tabou2.facade.api.v2</apiPackage>
							<inputSpec>./resources/openapi/tabou2-api-v2.json</inputSpec>
							<serverVariableOverrides>basePath=v2</serverVariableOverrides>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
					<delimiters>
						<delimiter>@</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
					<resources>
						<resource>
							<directory>src/main/resources</directory>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<finalName>${project.artifactId}</finalName>
					<excludes>
						<exclude>**/log4j2.xml</exclude>
						<exclude>**/default.properties</exclude>
						<exclude>**/tabou2.properties</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- JAR executable Spring Boot -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
						</goals>
						<configuration>
							<executable>true</executable>
                    		<finalName>${project.artifactId}</finalName>
						</configuration>
					</execution>
                </executions>
            </plugin>
			<!-- War Spring Boot -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<executions>
					<execution>
						<id>a-war</id>
						<phase>package</phase>
						<goals>
							<goal>war</goal>
						</goals>
						<configuration>			
							<finalName>${project.artifactId}</finalName>				
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<packagingExcludes>
								%regex[WEB-INF/lib/mapstruct-.*\.jar],
								%regex[WEB-INF/lib/spring-boot-devtools-.*\.jar],
								%regex[WEB-INF/lib/spring.*-test-.*\.jar]
							</packagingExcludes>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<profiles>

		<profile>
			<id>docker</id>
			<properties>
				<packageDatadirScmVersion>master</packageDatadirScmVersion>
				<dockerImageName>sigrennesmetropole/geor_tabou2_backend</dockerImageName>
				<dockerDatadirScmUrl>
					scm:git:https://github.com/georchestra/datadir.git</dockerDatadirScmUrl>
				<dockerDatadirScmVersion>docker-${packageDatadirScmVersion}</dockerDatadirScmVersion>
				<finalName>${project.artifactId}</finalName>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>1.2.2</version>
						<dependencies>
							<dependency>
								<groupId>com.google.guava</groupId>
								<artifactId>guava</artifactId>
								<version>28.2-jre</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>build-docker-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<imageName>${dockerImageName}</imageName>
							<imageTags>
								<imageTag>${project.version}</imageTag>
								<imageTag>latest</imageTag>
							</imageTags>
							<!-- chemin relatif depuis le target du prÃ©sent
							projet -->
							<dockerDirectory>${project.basedir}/../docker/rennes-metropole</dockerDirectory>

							<!-- copy the service's jar file from target into
							the root directory 
								of the image -->
							<resources>
								<resource>
									<targetPath>/</targetPath>
									<directory>${project.build.directory}</directory>
									<include>${finalName}.jar</include>
								</resource>
								<!-- <resource>
								<targetPath>/etc/georchestra</targetPath>
								<directory>${project.build.directory}/datadir</directory> 
									<include>${project.artifactId}/**</include> </resource> -->
							</resources>
							<!-- This will require to set up the docker-hub
							credentials correctly 
								into your ~/.m2/settings.xml, see:
							https://github.com/spotify/docker-maven-plugin#authenticating-with-private-registries -->
							<serverId>docker-hub</serverId>
							<registryUrl>https://index.docker.io/v1/</registryUrl>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

</project>
