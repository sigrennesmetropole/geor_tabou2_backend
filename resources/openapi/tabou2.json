{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
    "version": "0.0.1",
    "title": "tabou2",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "%host%",
  "basePath": "/tabou2",
  "schemes": [
    "http"
  ],
  "paths": {
    "/configuration/{id}": {
      "get": {
        "summary": "Récupération de la configuration",
        "description": "Ensemble des propriétés de config",
        "operationId": "getConfiguration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "id de la configuration",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConfigurationApp"
            }
          }
        }
      }
    },
    "/operations": {
      "get": {
        "summary": "Recherche des operations",
        "description": "Ensemble des opérations",
        "operationId": "searchOperations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "nom",
            "description": "Recherche par nom",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "nature",
            "description": "Recherche par nature",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "etape",
            "description": "Recherche par étape",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "diffusionRestreinte",
            "description": "Indique si les opérations à diffusion restreinte doivent être affichés si les droits le permettent",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "estSecteur",
            "description": "True si recherche sur les secteur, false si recherche par opération",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Recherche par code",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "numAds",
            "description": "Recherche par numéro ADS",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "autorisationDateDebut",
            "description": "Borne inférieure de recherche par date d'autorisation",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "autorisationDateFin",
            "description": "Borne supérieure de recherche par date d'autorisation",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "operationnelDateDebut",
            "description": "Borne inférieure de recherche par date opérationnelle",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "operationnelDateFin",
            "description": "Borne supérieure de recherche par date opérationnelle",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "clotureDateDebut",
            "description": "Borne inférieure de recherche par date de cloture",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "clotureDateFin",
            "description": "Borne supérieure de recherche par date de cloture",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "tiers",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Recherche par tiers"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Nom du champ sur lequel trier les résultats"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageResult"
            }
          }
        }
      },
      "post": {
        "summary": "Ajout d'une opération",
        "operationId": "createOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "operation",
            "description": "Nouvelle opération",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        }
      },
      "put": {
        "summary": "Modification d'une opération",
        "operationId": "updateOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "operation",
            "description": "Opération à modifier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        }
      }
    },
    "/operations/{operationId}": {
      "get": {
        "summary": "Récupération du détail d'une opération d'aménagement",
        "operationId": "getOperationById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "operationId",
            "description": "Identifiant de l'opération",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/operations/emprises": {
      "get": {
        "summary": "Récupération de la liste des emprises des opérations non suivies dans Tabou",
        "operationId": "getAvailableEmprises",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "nature",
            "description": "Nature de l'opération",
            "required": true,
            "type": "string",
            "enum": [
              "ZAC",
              "ZA",
              "EN_DIFFUS"
            ]
          },
          {
            "in": "query",
            "name": "estSecteur",
            "description": "True si la recherche porte sur les secteurs, false si on recherche les opérations",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Emprise"
              }
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/operations/{operationId}/etapes": {
      "get": {
        "summary": "Liste des étapes d'avancement possibles pour une opération d'aménagement",
        "operationId": "getEtapesByOperationId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "operationId",
            "description": "Identifiant de l'opération",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Etape"
              }
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      },
      "put": {
        "summary": "Modification de l'étape d'avancement d'une opération d'aménagement",
        "operationId": "updateEtapeByOperationId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "operationId",
            "description": "Identifiant de l'opération",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "etapeId",
            "description": "Identifiant de la nouvelle étape",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/operations/{operationId}/tiers": {
      "post": {
        "summary": "Association d'un tiers à une operation",
        "operationId": "associateTiersToOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "operationId",
            "description": "Identifiant d'une opération",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "associationTiers",
            "description": "Association entre le tiers et le type tiers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TiersTypeTiers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      },
      "get": {
        "summary": "Liste les tiers d'une opération",
        "operationId": "getTiersByOperationId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "operationId",
            "description": "Identifiant d'une opération",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssociationTiersTypeTiers"
              }
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/operations/{operationId}/tiers/{associationTiersId}": {
      "put": {
        "summary": "Modification d'un tiers d'une opération ",
        "operationId": "updateTiersByOperationId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "operationId",
            "description": "Identifiant d'une opération",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "path",
            "name": "associationTiersId",
            "description": "Identifiant du l'association tiers - type tiers - operation",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "associationTiers",
            "description": "Association entre le tiers, le type tiers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TiersTypeTiers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssociationTiersTypeTiers"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      },
      "delete": {
        "summary": "Supprime un tiers d'une opération ",
        "operationId": "deleteTiersFromOperation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "operationId",
            "description": "Identifiant d'une opération",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "path",
            "name": "associationTiersId",
            "description": "Identifiant du l'association tiers - type tiers - operation",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/operations/{operationId}/evenements": {
      "get": {
        "summary": "Recherche la liste des évènements d'une opération d'aménagement",
        "operationId": "getEvenementsByOperationId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "operationId",
            "description": "Identifiant de l'opération",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Evenement"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Ajout d'un évènement à une opération d'aménagement",
        "operationId": "addEvenementByOperationId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "evenement",
            "description": "Nouvel évènement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Evenement"
            }
          },
          {
            "in": "path",
            "name": "operationId",
            "description": "Identifiant du programme",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Evenement"
            }
          }
        }
      },
      "put": {
        "summary": "Modification d'un évènement d'une opération d'aménagement",
        "operationId": "updateEvenementByOperationId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "evenement",
            "description": "Evènement à modifier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Evenement"
            }
          },
          {
            "in": "path",
            "name": "operationId",
            "description": "Identifiant de l'opération",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Evenement"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/operations/{operationId}/evenements/{evenementId}": {
      "delete": {
        "summary": "Suppression d'un évènement d'une opération d'aménagement",
        "operationId": "deleteEvenementByOperationId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "evenementId",
            "description": "Evènement à supprimer",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "path",
            "name": "operationId",
            "description": "Identifiant de l'opération",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/programmes": {
      "post": {
        "summary": "Ajout d'un programme d'aménagement",
        "operationId": "createProgramme",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "programme",
            "description": "Nouveau programme d'aménagement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Programme"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Programme"
            }
          }
        }
      },
      "put": {
        "summary": "Edition d'un programme d'aménagement",
        "operationId": "updateProgramme",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "programme",
            "description": "Nouveau programme d'aménagement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Programme"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Programme"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      },
      "get": {
        "summary": "Recherche des programmes",
        "operationId": "searchProgrammes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "nom",
            "description": "Recherche par nom",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "etape",
            "description": "Recherche par étape",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "diffusionRestreinte",
            "description": "Indique si les opérations à diffusion restreinte doivent être affichés si les droits le permettent",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "code",
            "description": "Recherche par code",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "numAds",
            "description": "Recherche par numéro ADS",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "clotureDateDebut",
            "description": "Borne inférieure de recherche par date de cloture",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "clotureDateFin",
            "description": "Borne supérieure de recherche par date de cloture",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "tiers",
            "required": false,
            "type": "string",
            "description": "Recherche par tiers"
          },
          {
            "in": "query",
            "name": "attributionFonciereAnneeDebut",
            "description": "Borne inférieure de recherche par année d'attribution foncière",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "attributionFonciereAnneeFin",
            "description": "Borne supérieure de recherche par année d'attribution foncière",
            "required": false,
            "type": "integer"
          },
          {
            "in": "query",
            "name": "attributionDateDebut",
            "description": "Borne inférieure de recherche par date d'attribution",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "attributionDateFin",
            "description": "Borne supérieure de recherche par date d'attribution",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "commercialisationDateDebut",
            "description": "Borne inférieure de recherche par date de commercialisation",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "commercialisationDateFin",
            "description": "Borne supérieure de recherche par date de commercialisation",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "adsDateDebut",
            "description": "Borne inférieure de recherche par date ADS",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "adsDateFin",
            "description": "Borne supérieure de recherche par date ADS",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "docDateDebut",
            "description": "Borne inférieure de recherche par date DOC",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "docDateFin",
            "description": "Borne supérieure de recherche par date DOC",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "datDateDebut",
            "description": "Borne inférieure de recherche par date DAT",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "datDateFin",
            "description": "Borne supérieure de recherche par date DAT",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "in": "query",
            "name": "logementsAides",
            "description": "True si recherche sur les logements pour lesquels l'état apporte de l'aide",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyActive",
            "in": "query",
            "required": false,
            "description": "Indique si seuls les éléments actifs doivent être remontés",
            "type": "boolean",
            "default": true
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Nom du champ sur lequel trier les résultats"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageResult"
            }
          }
        }
      }
    },
    "/programmes/{programmeId}": {
      "get": {
        "summary": "Récupération du détail d'un programme d'aménagement",
        "operationId": "getProgrammeById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "programmeId",
            "description": "Identifiant du programme",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Programme"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/programmes/{programmeId}/permis": {
      "get": {
        "summary": "Récupération de la liste des permis de construire d'un programme",
        "operationId": "getPermisByProgrammeId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "programmeId",
            "description": "Identifiant du programme",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PermisConstruire"
              }
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/programmes/{programmeId}/agapeo": {
      "get": {
        "summary": "Récupération de la liste des données agapeo d'un programme",
        "operationId": "getAgapeoByProgrammeId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "programmeId",
            "description": "Identifiant du programme",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Agapeo"
              }
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/programmes/{programmeId}/tiers": {
      "get": {
        "summary": "Liste les tiers d'un programme",
        "operationId": "getTiersByProgrammeId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "programmeId",
            "description": "Identifiant du programme",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssociationTiersTypeTiers"
              }
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      },
      "post": {
        "summary": "Association d'un tiers à un programme",
        "operationId": "associateTiersToProgramme",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "programmeId",
            "description": "Identifiant d'un programme",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "tiersId",
            "description": "Identifiant du tiers",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "typeTiersId",
            "description": "Identifiant du type de tiers",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Programme"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/programmes/{programmeId}/etapes": {
      "get": {
        "summary": "Récupération de la liste des étapes d'avancement possibles pour un programme d'aménagement",
        "operationId": "getEtapesForProgrammeId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "programmeId",
            "required": true,
            "description": "Identifiant du programme",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Etape"
              }
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      },
      "put": {
        "summary": "Modification de l'étape d'avancement d'un programme d'aménagement",
        "operationId": "updateEtapeOfProgrammeId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "programmeId",
            "required": true,
            "description": "Identifiant du programme",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "etapeId",
            "description": "Identifiant de la nouvelle étape",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Programme"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/programmes/{programmeId}/evenements": {
      "get": {
        "summary": "Recherche la liste des évènements d'un programme d'aménagement",
        "operationId": "getEvenementsByProgrammeId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "programmeId",
            "description": "Identifiant du programme",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Evenement"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Ajout d'un évènement à un programme d'aménagement",
        "operationId": "addEvenementByProgrammeId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "evenement",
            "description": "Nouvel évènement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Evenement"
            }
          },
          {
            "in": "path",
            "name": "programmeId",
            "description": "Identifiant du programme",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Evenement"
            }
          }
        }
      },
      "put": {
        "summary": "Modification d'un évènement d'un programme d'aménagement",
        "operationId": "updateEvenementByProgrammeId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "evenement",
            "description": "Evènement à modifier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Evenement"
            }
          },
          {
            "in": "path",
            "name": "programmeId",
            "description": "Identifiant du programme",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Evenement"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/programmes/{programmeId}/evenements/{evenementId}": {
      "delete": {
        "summary": "Suppression d'un évènement d'un programme d'aménagement",
        "operationId": "deleteEvenementByProgrammeId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "evenementId",
            "description": "Evènement à supprimer",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "path",
            "name": "programmeId",
            "description": "Identifiant du programme",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Programme"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/programmes/{programmeId}/fiche-suivi": {
      "get": {
        "summary": "Récupération de la fiche de suivi d'un programme",
        "operationId": "downloadFicheSuivi",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "programmeId",
            "description": "Identifiant du programme",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/communes": {
      "get": {
        "summary": "Recherche d'une commune",
        "operationId": "searchCommunes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code_insee",
            "description": "Recherche par code insee",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "nom",
            "description": "Recherche par nom de commune",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "code_postal",
            "description": "Recherche par code postal de la commune",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Nom du champ sur lequel trier les résultats"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageResult"
            }
          }
        }
      }
    },
    "/communes/{communeId}": {
      "get": {
        "summary": "Recherche d'une commune par son id",
        "operationId": "getCommuneById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "communeId",
            "description": "Recherche par object id de la commune",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Commune"
            }
          }
        }
      }
    },
    "/quartiers": {
      "get": {
        "summary": "Recherche d'un quartier",
        "operationId": "searchQuartiers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "nom",
            "description": "Recherche par nom de quartier",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Nom du champ sur lequel trier les résultats"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageResult"
            }
          }
        }
      }
    },
    "/quartiers/{quartierId}": {
      "get": {
        "summary": "Recherche d'un quartier par son id",
        "operationId": "getQuartierById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "quartierId",
            "description": "Recherche par object id du quartier",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Quartier"
            }
          }
        }
      }
    },
    "/iris": {
      "get": {
        "summary": "Recherche d'un iris",
        "operationId": "searchIris",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "nom",
            "description": "Recherche par nom de l'iris",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "Nom du champ sur lequel trier les résultats",
            "type": "string"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageResult"
            }
          }
        }
      }
    },
    "/iris/{irisId}": {
      "get": {
        "summary": "Recherche d'une IRIS par son id",
        "operationId": "getIrisById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "irisId",
            "description": "Recherche par object id de l'iris",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Iris"
            }
          }
        }
      }
    },
    "/plui": {
      "get": {
        "summary": "Recherche d'un plui",
        "operationId": "searchPlui",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "libelle",
            "description": "Recherche par libellé du PLUi",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "Nom du champ sur lequel trier les résultats",
            "type": "string"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageResult"
            }
          }
        }
      }
    },
    "/plui/{pluiId}": {
      "get": {
        "summary": "Recherche d'un PLUi par son id",
        "operationId": "getPluiById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pluiId",
            "description": "Recherche par object id du PLUi",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PluiZonage"
            }
          }
        }
      }
    },
    "/epci": {
      "get": {
        "summary": "Recherche des EPCI",
        "operationId": "searchEpci",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "objectid",
            "description": "Recherche identifiant du PLUi",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "codeEpci",
            "description": "Recherche par code EPCI",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "nomEpci",
            "description": "Recherche par nom EPCI",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "Nom du champ sur lequel trier les résultats",
            "type": "string"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PluiZonage"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Ajoute une étape d'avancement pour les programmes d'aménagement",
        "operationId": "addEtapeProgramme",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "etape",
            "description": "Etape à ajouter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Etape"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Etape"
            }
          }
        }
      },
      "put": {
        "summary": "Modifie une étape d'avancement pour les programmes d'aménagement",
        "operationId": "editEtapeProgramme",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "etape",
            "description": "Etape à modifier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Etape"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Etape"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/tiers": {
      "get": {
        "summary": "Recherche des tiers",
        "operationId": "searchTiers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "nom",
            "description": "Recherche par nom du tiers",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "tiersPrive",
            "description": "Recherche par tiers privé si true, false si société",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "adresseVille",
            "description": "Recherche par adresse / ville du tiers",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "inactif",
            "description": "Recherche par tiers inactif",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "Nom du champ sur lequel trier les résultats",
            "type": "string"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageResult"
            }
          }
        }
      },
      "post": {
        "summary": "Ajout d'un tiers",
        "operationId": "createTiers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "tiers",
            "description": "Nouveau tiers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tiers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tiers"
            }
          }
        }
      },
      "put": {
        "summary": "Modification d'un tiers",
        "operationId": "updateTiers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "tiers",
            "description": "Tiers à modifier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tiers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tiers"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/tiers/{tiersId}": {
      "put": {
        "summary": "Récupération d'un tiers",
        "operationId": "getTiersById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tiersId",
            "description": "Identifiant du tiers",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tiers"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/tiers/{tiersId}/inactivate": {
      "put": {
        "summary": "Rends un tiers inactif",
        "operationId": "inactivateTiers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tiersId",
            "description": "Identifiant du tiers",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tiers"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/types-tiers": {
      "get": {
        "summary": "Recherche un type de tiers",
        "operationId": "searchTypeTiers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "libelle",
            "description": "Libellé du type tiers",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "inactif",
            "description": "Recherche par tiers inactif",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "Nom du champ sur lequel trier les résultats",
            "type": "string"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageResult"
            }
          }
        }
      },
      "post": {
        "summary": "Ajout d'un type de tiers",
        "operationId": "createTypeTiers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "typeTiers",
            "description": "Nouveau type de tiers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeTiers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeTiers"
            }
          }
        }
      },
      "put": {
        "summary": "Modification d'un type de tiers",
        "operationId": "updateTypeTiers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "typeTiers",
            "description": "Type de tiers à modifier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeTiers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeTiers"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/types-tiers/{typeTiersId}": {
      "get": {
        "summary": "Récupération du détail d'un type tiers",
        "operationId": "getTypeTiersById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "typeTiersId",
            "description": "Identifiant du type tiers",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeTiers"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/types-tiers/{typeTiersId}/inactivate": {
      "put": {
        "summary": "Rends un type de tiers inactif",
        "operationId": "inactivateTypeTiers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "typeTiersId",
            "description": "Identifiant du type de tiers",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeTiers"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/types-evenements": {
      "get": {
        "summary": "Recherche les types d'évènements",
        "operationId": "searchTypesEvenements",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "libelle",
            "description": "Recherche par libellé du type d'évènement",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "inactif",
            "description": "Recherche par type d'évènement inactif",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "Nom du champ sur lequel trier les résultats",
            "type": "string"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageResult"
            }
          }
        }
      },
      "post": {
        "summary": "Ajout d'un type d'évènements",
        "operationId": "createTypeEvenements",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "typeEvenement",
            "description": "Nouveau type d'évènement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeEvenement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeEvenement"
            }
          }
        }
      },
      "put": {
        "summary": "Modification d'un type d'évènements",
        "operationId": "updateTypeEvenements",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "typeEvenement",
            "description": "Type d'évènement à modifier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeEvenement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeEvenement"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/types-evenements/{typeEvenementId}": {
      "get": {
        "summary": "Récupération du détail d'un type d'évènement",
        "operationId": "getTypeEvenementById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "typeEvenementId",
            "description": "Identifiant du type d'évènement",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeEvenement"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/types-evenements/{typeEvenementId}/inactivate": {
      "put": {
        "summary": "Rends un type d'évènement inactif",
        "operationId": "inactivateTypeEvenement",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "typeEvenementId",
            "description": "Identifiant du type d'évènement",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeEvenement"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/types-documents": {
      "get": {
        "summary": "Recherche la liste des type de document",
        "operationId": "searchTypeDocument",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "typeDocumentId",
            "description": "Identifiant du type de document",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "libelle",
            "description": "libelle du type de document",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateInactif",
            "in": "query",
            "required": false,
            "description": "Date d'inactivite",
            "type": "string",
            "format": "date"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "Nom du champ sur lequel trier les résultats",
            "type": "string"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageResult"
            }
          }
        }
      },
      "post": {
        "summary": "Ajout d'un type de document",
        "operationId": "createTypeDocument",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "typeDocument",
            "description": "Nouveau type de document",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeDocument"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeDocument"
            }
          }
        }
      },
      "put": {
        "summary": "Modification d'un type de document",
        "operationId": "updateTypeDocument",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "typeDocument",
            "description": "Type de document à modifier",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeDocument"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeDocument"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/types-documents/{typeDocumentId}/inactivate": {
      "put": {
        "summary": "Rends un type de document inactif",
        "operationId": "inactivateTypeDocument",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "typeDocumentId",
            "description": "Identifiant du type de document",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeDocument"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/types-documents/{typeDocumentId}": {
      "get": {
        "summary": "Récupération d'un type de document",
        "operationId": "getTypeDocumentById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "typeDocumentId",
            "description": "Identifiant du type de document",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeDocument"
            }
          },
          "404": {
            "description": "La resource demandée n'existe pas"
          }
        }
      }
    },
    "/secteurs-dds": {
      "get": {
        "summary": "Recherche la liste des secteurs dds",
        "operationId": "searchSecteursDds",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "Identifiant du Secteur DDS",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "nom",
            "description": "Nom du secteur",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyActive",
            "in": "query",
            "required": false,
            "description": "Indique si seuls les éléments actifs doivent être remontés",
            "type": "boolean",
            "default": true
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "Nom du champ sur lequel trier les résultats",
            "type": "string"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecteurDds"
              }
            }
          }
        }
      }
    },
    "/secteurs-sam": {
      "get": {
        "summary": "Recherche la liste des secteurs SAM",
        "operationId": "searchSecteursSam",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "Identifiant du secteur",
            "required": false,
            "type": "number"
          },
          {
            "in": "query",
            "name": "nom",
            "description": "Nom du secteur",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyActive",
            "in": "query",
            "required": false,
            "description": "Indique si seuls les éléments actifs doivent être remontés",
            "type": "boolean",
            "default": true
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "Nom du champ sur lequel trier les résultats",
            "type": "string"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecteurSam"
              }
            }
          }
        }
      }
    },
    "/secteurs-foncier": {
      "get": {
        "summary": "Recherche la liste des secteurs fonciers",
        "operationId": "searchSecteursFonciers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "Recherche par identifiant de secteur",
            "required": false,
            "type": "number"
          },
          {
            "in": "query",
            "name": "nom",
            "description": "Recherche par nom de secteur",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyActive",
            "in": "query",
            "required": false,
            "description": "Indique si seuls les éléments actifs doivent être remontés",
            "type": "boolean",
            "default": true
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "Nom du champ sur lequel trier les résultats",
            "type": "string"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecteurFoncier"
              }
            }
          }
        }
      }
    },
    "/secteurs-speu": {
      "get": {
        "summary": "Recherche la liste des secteurs SPEU",
        "operationId": "searchSecteursSpeu",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "Identifiant du secteur",
            "required": false,
            "type": "number"
          },
          {
            "in": "query",
            "name": "libelle",
            "description": "Libellé du secteur",
            "required": false,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Index de début",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "onlyActive",
            "in": "query",
            "required": false,
            "description": "Indique si seuls les éléments actifs doivent être remontés",
            "type": "boolean",
            "default": true
          },
          {
            "name": "resultsNumber",
            "in": "query",
            "required": false,
            "description": "Nombre de résultats à remonter",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "Nom du champ sur lequel trier les résultats",
            "type": "string"
          },
          {
            "name": "asc",
            "in": "query",
            "required": false,
            "description": "Indique si le tri doit être faire par ordre ascendant",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecteurHabitat"
              }
            }
          }
        }
      }
    },
    "/natures": {
      "get": {
        "summary": "Récupère la liste des natures",
        "operationId": "getNatures",
        "produces": [
          "application/json"
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Nature"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Generic": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        }
      }
    },
    "ConfigurationApp": {
      "type": "object",
      "properties": {
        "versionApp": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "Operation": {
      "description": "Opération d'amménagement",
      "type": "object",
      "properties": {
        "id": {
          "description": "Identificateur unique. Clé primaire",
          "type": "integer",
          "format": "int64"
        },
        "nature": {
          "description": "Nature de l'opération : ZAC, ZA ou En diffus",
          "type": "object",
          "$ref": "#/definitions/Nature"
        },
        "etape": {
          "description": "Indique l'étape d'avancement de l'opération ou du secteur",
          "type": "object",
          "$ref": "#/definitions/Etape"
        },
        "secteur": {
          "description": "Indique que l'opération est un secteur",
          "type": "boolean",
          "default": false
        },
        "diffusionRestreinte": {
          "description": "Indique si l'opération est en diffusion restreinte (en off)",
          "type": "boolean",
          "default": false
        },
        "code": {
          "description": "Code de l'opératin",
          "type": "string"
        },
        "nom": {
          "description": "Nom de l'opération",
          "type": "string"
        },
        "operation": {
          "description": "Description textuelle du programme de l'opération (nombre de logement, type habitat…)",
          "type": "string"
        },
        "description": {
          "description": "Description de l'opération pour des besoins de la communication (par ex: Panorama des ZAC)",
          "type": "string"
        },
        "idEmprise":{
          "description": "Identifiant de l'emprise de l'opération",
          "type": "integer",
          "format": "int64"
        },
        "autorisationDate": {
          "description": "Date d'autorisation (liée à un document d'urbanisme)",
          "type": "string",
          "format": "date"
        },
        "operationnelDate": {
          "type": "string",
          "format": "date"
        },
        "clotureDate": {
          "type": "string",
          "format": "date"
        },
        "numAds": {
          "description": " numéro d'autorisation des droits des sols",
          "type": "string"
        },
        "surfaceTotale": {
          "type": "number",
          "format": "int64"
        },
        "nbLogementsPrevu": {
          "type": "integer",
          "format": "int64"
        },
        "plhLogementsPrevus": {
          "type": "integer",
          "format": "int64"
        },
        "plhLogementsLivres": {
          "type": "integer",
          "format": "int64"
        },
        "ql1": {
          "description": "Renouvellement ou en extension",
          "type": "string"
        },
        "ql2": {
          "description": "Compatible ou non avec le SCOT",
          "type": "boolean"
        },
        "ql3": {
          "description": "ZA productive = Structurante, pole tertiaire, proximité",
          "type": "string"
        },
        "nbEntreprise": {
          "type": "integer",
          "format": "int64"
        },
        "nbSalarie": {
          "type": "integer",
          "format": "int64"
        },
        "createUser": {
          "description": "Utilisateur qui a créé l'entité",
          "type": "string"
        },
        "createDate": {
          "description": "Date d'ajout de l'entité",
          "type": "string",
          "format": "date"
        },
        "modifUser": {
          "description": "Dernier utilisateur ayant modifié l'entité",
          "type": "string"
        },
        "modifDate": {
          "description": "Date de dernière modification de l'entité",
          "type": "string",
          "format": "date"
        }
      }
    },
    "Programme": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identificateur unique. Clé primaire",
          "type": "integer",
          "format": "int64"
        },
        "etape": {
          "description": "Indique l'étape d'avancement du programme",
          "type": "object",
          "$ref": "#/definitions/Etape"
        },
        "diffusionRestreinte": {
          "description": "Indique si le programme est en diffusion restreinte (en off)e",
          "type": "boolean"
        },
        "code": {
          "description": "Code du programme (celui du plan guide)",
          "type": "string"
        },
        "nom": {
          "description": "Nom du programme (celui donné par le promoteur)",
          "type": "string"
        },
        "programme": {
          "description": "Description du programme (nombre de logement, type habitat…)",
          "type": "string"
        },
        "description": {
          "description": "Description du programme pour des besoins de la communication (par ex: Panorama des ZAC)",
          "type": "string"
        },
        "attributionFonciereAnnee": {
          "description": "Année de l'attribution foncière",
          "type": "string"
        },
        "attributionDate": {
          "description": "Date d'attribution du programme au promoteur",
          "type": "string",
          "format": "date"
        },
        "commercialisationDate": {
          "description": "Date de lancement de la commercialisation",
          "type": "string",
          "format": "date"
        },
        "demarrageDate": {
          "description": "TODO",
          "type": "string",
          "format": "date"
        },
        "livraisonDate": {
          "description": "Date de livraison du programme",
          "type": "string",
          "format": "date"
        },
        "clotureDate": {
          "description": "Date de clôture",
          "type": "string",
          "format": "date"
        },
        "logementsTotal": {
          "description": "Nombre de logements total (prévu, jusqu'à l'étape de livraison, livré ensuite)",
          "type": "integer",
          "format": "int32"
        },
        "logementsAccesLibre": {
          "description": "Nombre de logements en accession libre",
          "type": "integer",
          "format": "int32"
        },
        "logementsAccessMaitrise": {
          "description": "Nombre de logements en accession maitrisée",
          "type": "integer",
          "format": "int32"
        },
        "logementsLocatifRegule": {
          "description": "Nombre de logements en locatif régulé (PLS privé, LLI, Pinel Régulé, Usufruit)",
          "type": "integer",
          "format": "int32"
        },
        "logementsPls": {
          "description": "Nombre de logements en PLS institutionnel (PLS HLM)",
          "type": "integer",
          "format": "int32"
        },
        "logementsAccesAide": {
          "description": "Nombre de logements en accession sociale (PSLA, OFS-BRS)",
          "type": "integer",
          "format": "int32"
        },
        "logementsLocatifAide": {
          "description": "Nombre de logements en locatif social (PLUS, PLAI)",
          "type": "integer",
          "format": "int32"
        },
        "numAds": {
          "description": "Numéro du permis de construire",
          "type": "string"
        },
        "createUser": {
          "description": "Utilisateur qui a créé le programme",
          "type": "string"
        },
        "createDate": {
          "description": "Date d'ajout du programme",
          "type": "string",
          "format": "date"
        },
        "modifUser": {
          "description": "Dernier utilisateur ayant modifié le programme",
          "type": "string"
        },
        "modifDate": {
          "description": "Date de dernière modification du programme",
          "type": "string",
          "format": "date"
        }
      }
    },
    "TiersTypeTiers": {
      "type": "object",
      "description": "",
      "properties": {
        "typeTiersId": {
          "description": "Identifiant du type de tiers",
          "type": "integer",
          "format": "int64"
        },
        "tiersId": {
          "description": "Identifiant du tiers",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AssociationTiersTypeTiers": {
      "type": "object",
      "description": "",
      "properties": {
        "id": {
          "description": "Identifiant de la jointure entité opération ou programme - tiers - type tiers",
          "type": "integer",
          "format": "int64"
        },
        "typeTiers": {
          "description": "Type de tiers",
          "$ref": "#/definitions/TypeTiers"
        },
        "tiers": {
          "description": "Tiers",
          "$ref": "#/definitions/Tiers"
        }
      }
    },
    "Evenement": {
      "type": "object",
      "description": "Liste des évènements : système et utilisateur",
      "properties": {
        "id": {
          "description": "Identifant de l'évènement",
          "type": "integer",
          "format": "int64"
        },
        "eventDate": {
          "description": "Date de l'évènement",
          "type": "string",
          "format": "date"
        },
        "description": {
          "description": "Description de l'évènement",
          "type": "string"
        },
        "systeme": {
          "description": "Indique si l'évènement est de type système ou non",
          "type": "boolean"
        },
        "createUser": {
          "description": "Utilisateur qui a créé l'évènement",
          "type": "string"
        },
        "createDate": {
          "description": "Date création de l'évènement",
          "type": "string",
          "format": "date"
        },
        "modifUser": {
          "description": "Dernier utilisateur ayant modifié l'évènement",
          "type": "string"
        },
        "modifDate": {
          "description": "Date de dernière modification de l'évènement",
          "type": "string",
          "format": "date"
        },
        "idType": {
          "description": "Type de l'évènement",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TypeEvenement": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifiant unique du type d'évènement",
          "type": "integer",
          "format": "int64"
        },
        "libelle": {
          "description": "Libellé du type de document",
          "type": "string"
        },
        "dateInactif": {
          "description": "Date de mise en inactivité du type de document",
          "type": "string",
          "format": "date"
        },
        "code":  {
          "description": "Code unique d'un type de document",
          "type": "string"
        },
        "systeme": {
          "description": "Indique si le type d'évènement est de type système ou non",
          "type": "boolean"
        }
      }
    },
    "Commune": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifant de la commune",
          "type": "integer",
          "format": "int32"
        },
        "nom": {
          "description": "Nom de la commune",
          "type": "string"
        },
        "codeInsee": {
          "description": "Code Insee de la commune",
          "type": "integer"
        },
        "codePostal": {
          "description": "Code postal de la commune",
          "type": "string"
        }
      }
    },
    "Iris": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifiant unique",
          "type": "integer",
          "format": "int32"
        },
        "ccom": {
          "description": "",
          "type": "string"
        },
        "codeIris": {
          "description": "Code l'IRIS",
          "type": "string"
        },
        "nmiris": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Quartier": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifiant unique",
          "type": "integer",
          "format": "int32"
        },
        "nom": {
          "description": "Nom du quartier",
          "type": "string"
        },
        "nuQuart": {
          "description": "",
          "type": "number"
        }
      }
    },
    "PluiZonage": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifiant unique",
          "type": "integer",
          "format": "int32"
        },
        "libelle": {
          "description": "Nom du zonage PLUi",
          "type": "string"
        }
      }
    },
    "Epci": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifiant unique",
          "type": "integer",
          "format": "int32"
        },
        "codeEpci": {
          "description": "Code de l'EPCI",
          "type": "string"
        },
        "nomEpci": {
          "description": "Nom l'EPCI",
          "type": "string"
        }
      }
    },
    "Tiers": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identificateur unique. Clé primaire",
          "type": "integer",
          "format": "int64"
        },
        "nom": {
          "description": "Nom du tiers (raison sociale)",
          "type": "string"
        },
        "adresseNum": {
          "description": "Numéro de rue de l'adresse du tiers",
          "type": "string"
        },
        "adresseRue": {
          "description": "Nom de la rue de l'adresse du tiers",
          "type": "string"
        },
        "adresseCp": {
          "description": "Code postal de l'adresse du tiers",
          "type": "string"
        },
        "adresseVille": {
          "description": "Ville du tiers",
          "type": "string"
        },
        "telephone": {
          "description": "Numéro de téléphone du tiers",
          "type": "string"
        },
        "telecopie": {
          "description": "Numéro de télécopie du tiers",
          "type": "string"
        },
        "email": {
          "description": "Adresse email du tiers",
          "type": "string"
        },
        "siteWeb": {
          "description": "Site Web du tiers",
          "type": "string"
        },
        "contact": {
          "description": "Nom du contact",
          "type": "string"
        },
        "estPrive": {
          "description": "True si le tiers est un privé, false si société",
          "type": "boolean"
        },
        "dateInactif": {
          "description": "Date de mise en inactivité du tiers",
          "type": "string",
          "format": "date"
        }
      }
    },
    "TypeTiers": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifiant unique du type de tiers",
          "type": "integer",
          "format": "int64"
        },
        "libelle": {
          "description": "Libellé du type de tiers",
          "type": "string"
        },
        "createUser": {
          "description": "Utilisateur qui a créé le type tiers",
          "type": "string"
        },
        "createDate": {
          "description": "Date d'ajout du type tiers",
          "type": "string",
          "format": "date"
        },
        "dateInactif": {
          "description": "Date de mise en inactivité du type de document",
          "type": "string",
          "format": "date"
        }
      }
    },
    "SecteurDds": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifiant du secteur",
          "type": "integer",
          "format": "int32"
        },
        "instructeur": {
          "description": "Nom de l'instructeur",
          "type": "string"
        },
        "assistant": {
          "description": "Nom de l'assistant",
          "type": "string"
        },
        "secteur": {
          "description": "Nom du secteur",
          "type": "string"
        }
      }
    },
    "SecteurSam": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Idenifiant du secteur",
          "type": "string"
        },
        "nom": {
          "description": "Nom du secteur",
          "type": "string"
        },
        "referent": {
          "description": "Nom du chargé d'opération",
          "type": "string"
        }
      }
    },
    "SecteurFoncier": {
      "type": "object",
      "properties": {
        "nom": {
          "description": "Nom du secteur",
          "type": "string"
        },
        "instructeur": {
          "description": "Nom de l'instructeur",
          "type": "string"
        }
      }
    },
    "SecteurHabitat": {
      "type": "object",
      "properties": {
        "nom": {
          "description": "Non du secteur",
          "type": "string"
        }
      }
    },
    "Etape": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identificateur unique. Clé primaire",
          "type": "integer",
          "format": "int64"
        },
        "libelle": {
          "description": "Libellé de l'étape ",
          "type": "string"
        },
        "code": {
          "description": "Identifiant unique pour l'étape",
          "type": "string"
        },
        "type": {
          "description": "Indicateur permettant de savoir s'il s'agit de l'étape initiale, finale ou intermédiaire",
          "type": "string",
          "enum": [
            "START", "NORMAL", "END"
          ]
        },
        "mode": {
          "description": "Indicateur permettant de savoir si l'étape est visible en mode off ou publique",
          "type": "string",
          "enum": [
            "OFF", "PUBLIC", "NONE"
          ]
        }
      }
    },
    "TypeDocument": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifiant unique du type de document",
          "type": "integer",
          "format": "int64"
        },
        "libelle": {
          "description": "Libellé du type document",
          "type": "string"
        },
        "dateInactif": {
          "description": "Date de mise en inactivité du type de document",
          "type": "string",
          "format": "date"
        }
      }
    },
    "Document": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifiant unique du document",
          "type": "integer",
          "format": "int64"
        },
        "libelle": {
          "description": "Description du document",
          "type": "string"
        }
      }
    },
    "Nature": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifiant unique de la nature",
          "type": "integer",
          "format": "int64"
        },
        "libelle": {
          "description": "Description de la nature",
          "type": "string",
          "enum": [
            "ZAC", "ZA", "En diffus"
          ]
        },
        "dateInactif": {
          "description": "Date de mise en inactivité de la nature",
          "type": "string",
          "format": "date"
        }
      }
    },
    "PermisConstruire": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifiant unique du permis",
          "type": "integer",
          "format": "int64"
        },
        "numAds": {
          "description": "Numero du permis de constuire",
          "type": "string"
        },
        "depotDossier": {
          "description": "Date de dépot du permis de constuire",
          "type": "string",
          "format": "date"
        },
        "decisionDossier": {
          "description": "Décision du dossier",
          "type": "string"
        },
        "surfBureaux": {
          "description": "M² de surface de plancher dédié à l'activité bureaux",
          "type": "number",
          "format": "double"
        },
        "surfCommerces": {
          "description": "M² de surface de plancher dédié à l'activité commerces",
          "type": "number",
          "format": "double"
        },
        "surfIndustries": {
          "description": "M² de surface de plancher dédié à l'activité industries",
          "type": "number",
          "format": "double"
        },
        "surfEquipPub": {
          "description": "M² de surface de plancher dédié à l'activité équipement public",
          "type": "number",
          "format": "double"
        },
        "surfAutre": {
          "description": "M² de surface de plancher dédié à l'activité 'autres'",
          "type": "number",
          "format": "double"
        }
      }
    },
    "Agapeo": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifiant du programme Agapeo",
          "type": "integer",
          "format": "int64"
        },
        "anneeProg": {
          "description": "Année de l'agrément donné par l'état",
          "type": "integer",
          "format": "int64"
        },
        "nomOperation": {
          "description": "Identifiant unique du permis",
          "type": "string"
        },
        "numDossier": {
          "description": "",
          "type": "integer"
        },
        "etat": {
          "description": "",
          "type": "string"
        },
        "maitreOuvrage": {
          "description": "",
          "type": "string"
        },
        "commune": {
          "description": "",
          "type": "string"
        },
        "numAds": {
          "description": "",
          "type": "string"
        },
        "conventionApplicationPlh": {
          "description": "",
          "type": "string"
        },
        "logementsLocatAide": {
          "description": "Nombre de logements en locatif social (PLUS, PLAI)",
          "type": "integer",
          "format": "int32"
        },
        "logementsAccessAide": {
          "description": "Nombre de logements en accession libre",
          "type": "integer",
          "format": "int32"
        },
        "logementsLocatRegulPrive": {
          "description": "Nombre de logements en locatif régulé (PLS privé, LLI, Pinel Régulé, Usufruit)",
          "type": "integer",
          "format": "int32"
        },
        "logementsLocatRegulHlm": {
          "description": "Nombre de logements en PLS institutionnel (PLS HLM)",
          "type": "integer",
          "format": "int32"
        },
        "logementsAccessMaitrise": {
          "description": "Nombre de logements en accession maitrisée",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PageResult": {
      "type": "object",
      "properties": {
        "elements": {
          "type": "array",
          "items": "object"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Emprise": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifiant de l'emprise",
          "type": "integer",
          "format": "int64"
        },
        "nom": {
          "description": "Nom de l'emprise",
          "type": "string"
        }
      }
    }
  }
}